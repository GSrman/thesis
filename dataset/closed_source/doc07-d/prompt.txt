For the following research paper segments, make a short bulletpoint summary of the following ethical aspects: Bias and fairness, Privacy, Transparency, Dual Use, Accessibility, Data collection. If an aspect is not discussed, say so.

Abstract
Deep Neural Networks (DNNs) are powerful models that have achieved excellent performance on difficult learning tasks. Although DNNs work well whenever
large labeled training sets are available, they cannot be used to map sequences to
sequences. In this paper, we present a general end-to-end approach to sequence
learning that makes minimal assumptions on the sequence structure. Our method
uses a multilayered Long Short-Term Memory (LSTM) to map the input sequence
to a vector of a fixed dimensionality, and then another deep LSTM to decode the
target sequence from the vector. Our main result is that on an English to French
translation task from the WMT’14 dataset, the translations produced by the LSTM
achieve a BLEU score of 34.8 on the entire test set, where the LSTM’s BLEU
score was penalized on out-of-vocabulary words. Additionally, the LSTM did not
have difficulty on long sentences. For comparison, a phrase-based SMT system
achieves a BLEU score of 33.3 on the same dataset. When we used the LSTM
to rerank the 1000 hypotheses produced by the aforementioned SMT system, its
BLEU score increases to 36.5, which is close to the previous best result on this
task. The LSTM also learned sensible phrase and sentence representations that
are sensitive to word order and are relatively invariant to the active and the passive voice. Finally, we found that reversing the order of the words in all source
sentences (but not target sentences) improved the LSTM’s performance markedly,
because doing so introduced many short term dependencies between the source
and the target sentence which made the optimization problem easier.
Introduction
Deep Neural Networks (DNNs) are extremely powerful machine learning models that achieve excellent performance on difficult problems such as speech recognition [13, 7] and visual object recognition [19, 6, 21, 20]. DNNs are powerful because they can perform arbitrary parallel computation
for a modest number of steps. A surprising example of the power of DNNs is their ability to sort
N N-bit numbers using only 2 hidden layers of quadratic size [27]. So, while neural networks are
related to conventional statistical models, they learn an intricate computation. Furthermore, large
DNNs can be trained with supervised backpropagation whenever the labeled training set has enough
information to specify the network’s parameters. Thus, if there exists a parameter setting of a large
DNN that achieves good results (for example, because humans can solve the task very rapidly),
supervised backpropagation will find these parameters and solve the problem.
Despite their flexibility and power, DNNs can only be applied to problems whose inputs and targets
can be sensibly encoded with vectors of fixed dimensionality. It is a significant limitation, since
many important problems are best expressed with sequences whose lengths are not known a-priori.
For example, speech recognition and machine translation are sequential problems. Likewise, question answering can also be seen as mapping a sequence of words representing the question to a
sequence of words representing the answer. It is therefore clear that a domain-independent method
that learns to map sequences to sequences would be useful.
Sequences pose a challenge for DNNs because they require that the dimensionality of the inputs and
outputs is known and fixed. In this paper, we show that a straightforward application of the Long
Short-Term Memory (LSTM) architecture [16] can solve general sequence to sequence problems.
The idea is to use one LSTM to read the input sequence, one timestep at a time, to obtain large fixeddimensional vector representation, and then to use another LSTM to extract the output sequence
from that vector (fig. 1). The second LSTM is essentially a recurrent neural network language model
[28, 23, 30] except that it is conditioned on the input sequence. The LSTM’s ability to successfully
learn on data with long range temporal dependencies makes it a natural choice for this application
due to the considerable time lag between the inputs and their corresponding outputs (fig. 1).
There have been a number of related attempts to address the general sequence to sequence learning
problem with neural networks. Our approach is closely related to Kalchbrenner and Blunsom [18]
who were the first to map the entire input sentence to vector, and is related to Cho et al. [5] although
the latter was used only for rescoring hypotheses produced by a phrase-based system. Graves [10]
introduced a novel differentiable attention mechanism that allows neural networks to focus on different parts of their input, and an elegant variant of this idea was successfully applied to machine
translation by Bahdanau et al. [2]. The Connectionist Sequence Classification is another popular
technique for mapping sequences to sequences with neural networks, but it assumes a monotonic
alignment between the inputs and the outputs [11].
The main result of this work is the following. On the WMT’14 English to French translation task,
we obtained a BLEU score of 34.81 by directly extracting translations from an ensemble of 5 deep
LSTMs (with 384M parameters and 8,000 dimensional state each) using a simple left-to-right beamsearch decoder. This is by far the best result achieved by direct translation with large neural networks. For comparison, the BLEU score of an SMT baseline on this dataset is 33.30 [29]. The 34.81
BLEU score was achieved by an LSTM with a vocabulary of 80k words, so the score was penalized
whenever the reference translation contained a word not covered by these 80k. This result shows
that a relatively unoptimized small-vocabulary neural network architecture which has much room
for improvement outperforms a phrase-based SMT system.
Finally, we used the LSTM to rescore the publicly available 1000-best lists of the SMT baseline on
the same task [29]. By doing so, we obtained a BLEU score of 36.5, which improves the baseline by
3.2 BLEU points and is close to the previous best published result on this task (which is 37.0 [9]).
Surprisingly, the LSTM did not suffer on very long sentences, despite the recent experience of other
researchers with related architectures [26]. We were able to do well on long sentences because we
reversed the order of words in the source sentence but not the target sentences in the training and test
set. By doing so, we introduced many short term dependencies that made the optimization problem
much simpler (see sec. 2 and 3.3). As a result, SGD could learn LSTMs that had no trouble with
long sentences. The simple trick of reversing the words in the source sentence is one of the key
technical contributions of this work.
A useful property of the LSTM is that it learns to map an input sentence of variable length into
a fixed-dimensional vector representation. Given that translations tend to be paraphrases of the
source sentences, the translation objective encourages the LSTM to find sentence representations
that capture their meaning, as sentences with similar meanings are close to each other while different
sentences meanings will be far. A qualitative evaluation supports this claim, showing that our model
is aware of word order and is fairly invariant to the active and passive voice.
Conclusion
In this work, we showed that a large deep LSTM, that has a limited vocabulary and that makes
almost no assumption about problem structure can outperform a standard SMT-based system whose
vocabulary is unlimited on a large-scale MT task. The success of our simple LSTM-based approach
on MT suggests that it should do well on many other sequence learning problems, provided they
have enough training data.
We were surprised by the extent of the improvement obtained by reversing the words in the source
sentences. We conclude that it is important to find a problem encoding that has the greatest number
of short term dependencies, as they make the learning problem much simpler. In particular, while
we were unable to train a standard RNN on the non-reversed translation problem (shown in fig. 1),
we believe that a standard RNN should be easily trainable when the source sentences are reversed
(although we did not verify it experimentally).
We were also surprised by the ability of the LSTM to correctly translate very long sentences. We
were initially convinced that the LSTM would fail on long sentences due to its limited memory,
and other researchers reported poor performance on long sentences with a model similar to ours
[5, 2, 26]. And yet, LSTMs trained on the reversed dataset had little difficulty translating long
sentences.
Most importantly, we demonstrated that a simple, straightforward and a relatively unoptimized approach can outperform an SMT system, so further work will likely lead to even greater translation
accuracies. These results suggest that our approach will likely do well on other challenging sequence
to sequence problems.
